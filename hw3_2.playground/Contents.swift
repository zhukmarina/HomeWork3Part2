import Foundation

/*
 
 –î–æ–º–∞—à–Ω—î –∑–∞–≤–¥–∞–Ω–Ω—è 3
 
 –ß–∞—Å—Ç–∏–Ω–∞ 2
 
 –Ñ –≥–æ—Ç–æ–≤–∏–π –∫–æ–¥, –∞–ª–µ –≤—ñ–Ω –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∑ –ø–æ–º–∏–ª–∫–∞–º–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —ó—Ö –≤–∏–ø—Ä–∞–≤–∏—Ç–∏.
 
 –ö–æ–¥ –Ω–∏–∂—á–µ —É–º–æ–≤–Ω–æ –º–æ–∂–Ω–∞ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –Ω–∞ 2 —Å–µ–∫—Ü—ñ—ó:
    1 - –æ–ø–∏—Å —Å–≤–æ—ó—Ö —Ç–∏–ø—ñ–≤ (–∞–±–æ —Ä–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è —Ç–∏–ø—ñ–≤) –¥–ª—è —ó—Ö –ø–æ–¥–∞–ª—å—à–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è,
        —â–æ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –Ω–µ –æ–¥—Ä–∞–∑—É, –∞ –¥–µ—Å—å –¥–∞–ª—ñ —É —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Å—Ü–µ–Ω–∞—Ä—ñ—ó–≤, –∞–±–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏—Ö –¥—ñ–π, –∞–±–æ –ª–æ–≥—ñ–∫–∏.
    2 - —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç/–∑–º—ñ–Ω–Ω–∏—Ö –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è "–µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤" (instanse).
        –¢–æ–±—Ç–æ, —â–æ–± –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –∑–º—ñ–Ω–Ω–æ—ó/–ø–æ–ª—è, –∞–±–æ —Ñ—É–Ω–∫—Ü—ñ—ó, –æ–ø–∏—Å–∞–Ω–æ—ó –≤ –∫–ª–∞—Å—ñ/—Å—Ç—Ä—É–∫—Ç—É—Ä—ñ —Ç–∞ –∑–∞–ø–∏—Å–∞—Ç–∏/–ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è,
        –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∏–¥—ñ–ª–∏—Ç–∏ –ø–∞–º'—è—Ç—å, —è–∫–æ—Å—å —ó—ó –Ω–∞–∑–≤–∞—Ç–∏ —Ç–∞ —Å–∫–∞–∑–∞—Ç–∏ —è–∫–æ–≥–æ —Ç–∏–ø—É –≤–æ–Ω–∞ –±—É–¥–µ,
        —á–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ (String/Int/Double/...), —á–∏ —Ç–æ–≥–æ —Ç–∏–ø—É, —è–∫–∏–π –≤–∏ –æ–ø–∏—Å–∞–ª–∏ (enum/class/struct)
 
 –¢–∞–∫–æ–∂, —Å–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ç–∞ –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏–π –∫–æ–¥ - —Ü–µ –ø—Ä–æ—Å—Ç–µ–Ω—å–∫–∏–π –ø—Ä–∏–∫–ª–∞–¥, —è–∫ –∫—Ä–∞—â–µ —ñ –∑—Ä—É—á–Ω—ñ—à–µ
 –æ—Ä–≥–∞–Ω—ñ–∑—É–≤–∞—Ç–∏ —Ç–∞ —Ä–µ–∞–ª—ñ–∑–æ–≤—É–≤–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –∑–∞–¥–∞—á.
 
 –¢–∞–∫, –º–æ–∂–Ω–∞ –Ω–∞–ø–∏—Å–∞—Ç–∏ –≤—Å–µ –≤ –æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—ñ, –∞–±–æ –≤ –æ–¥–Ω–æ–º—É –º—ñ—Å—Ü—ñ —ñ –≤–æ–Ω–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ.
 
 –ê–ª–µ, –∫—Ä–∞—â–µ –≤—ñ–¥–æ–∫—Ä–µ–º–∏—Ç–∏ —Ä—ñ–∑–Ω—É –ª–æ–≥—ñ–∫—É –≤ —Ä—ñ–∑–Ω—ñ –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ {  } —Ç–∞ –¥–∞—Ç–∏ —Ü—å–æ–º—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—É –Ω–∞–∑–≤—É,
 –∞ —Ç–æ–¥—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏, –¥–µ —Ü–µ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ, –ø–æ—Å–∏–ª–∞—é—á–∏—Å—å –Ω–∞ –Ω–∞–∑–≤—É
 
 */


// –°–ï–ö–¶–Ü–Ø 1 - –†–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è –∞–±–æ –æ–ø–∏—Å —Å–≤–æ—ó—Ö —Ç–∏–ø—ñ–≤, —è–∫—ñ –±—É–¥—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è (—ñ–Ω—ñ—Ü—ñ—é–≤–∞—Ç–∏—Å—è —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—Ç–∏—Å—è) —É —Å–µ–∫—Ü—ñ—ó 2


// –ü—Å–µ–≤–¥–æ–Ω—ñ–º –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä—É
typealias ProductInfo = (String, Double, String, String, String)

// –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—è/Enum - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É –∑–Ω–∏–∂–∫–∏
enum Discount {
    case regular
    case vip
    case none
}

// –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—è/Enum - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
enum ProcessorType: String {
    case intel = "Intel"
    case amd = "AMD"
    case none = ""
}

// –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—è/Enum - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É –≤–∞–ª—é—Ç–∏
enum Currency: String {
    case uah = "‚Ç¥"
    case usd = "$"
    case eur = "‚Ç¨‚Äé‚Äé"
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É –ú–∞—Ç–µ—Ä–∏–Ω—Å—å–∫–æ—ó –ø–ª–∞—Ç–∏ —ñ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤—ñ–ø–æ–≤—ñ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
struct MotherBoard {
    var socet = ""
    var processor: ProcessorType = .intel
}

// –ö–ª–∞—Å - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É –ø—Ä–æ–¥—É–∫—Ç–∞ —ñ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤—ñ–ø–æ–≤—ñ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å,
// —Ç–∞–∫–æ–∂ –º–∞—î —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î —É—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è —É —Ç–µ–∫—Ç–æ–≤–æ–º—É –≤—ñ–≥–ª—è–¥—ñ –≤ –ø–µ–≤–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ
class Product {
    // –ü–æ–ª—è –∫–ª–∞—Å—É
    var name = ""
    var price: Double = 0.0
    var currency: Currency = .uah
    var motherBoard = MotherBoard()
    
    // –§—É–Ω–∫—Ü—ñ—ó –∫–ª–∞—Å—É
    func textDescription() -> String {
        
        let stringPrice = String(format: "%.2f", price)
        
        let firstLine = "–ù–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É: \(name), –¶—ñ–Ω–∞: \(currency.rawValue) \(stringPrice)"
        let secondLine = "–°–æ–∫–µ—Ç: \(motherBoard.socet), –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: \(motherBoard.processor.rawValue)"
        
        return firstLine + "\n" + secondLine
    }
}

// –ö–ª–∞—Å - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É –ö–æ—à–∏–∫ —ñ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤—ñ–ø–æ–≤—ñ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å,
// –º–∞—î –¥–µ–∫—ñ–ª—å–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è –¥—ñ–π –∑ –º–∞—Å–∏–≤–æ–º –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —É –∫–æ—à–∏–∫—É
class Cart {
    
    var products: [Product] = []
    var discount: Discount = .none
    
    func removeSelectedProduct(at index: Int) {
        products.remove(at: index)
    }
    
    func clear() {
        for index in 0 ... products.count {
            products.removeAll()
        }
    }
    
    func totalPrice() -> Double {
        
        var resultPrice: Double = 0.0
        
        for product in products {
            resultPrice += product.price
        }
        
        return resultPrice
    }
    
    func discountPercentValue() -> Int {
        switch discount {
        case .regular:
            return 5
        case .vip:
            return 15
        case .none:
            return 0
        }
    }
    
    func totalPriceWithDiscount() -> Double {
        let price = totalPrice()
        let result = price - (price * (Double(discountPercentValue()) / 100.0) )
        
        return result
    }
}

// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É –†–µ–∑—É–ª—å—Ç–∞—Ç –°–µ—Ä–≤–µ—Ä–∞ —ñ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤ –¥–ª—è –≤–∏–≤–æ–¥—É –≤ –∫–æ–Ω—Å–æ–ª—å
struct ResponseFromServer {
    // –¶—ñ–Ω–∏ –≤–∑—è–≤ –∑ —Ä–æ–∑–µ—Ç–∫–∏ üôÉ
    let sourceProducts: [ProductInfo] = [
        (productName: "ASRock H310CV-HDV", price: 1717.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "Asus Prime H310M-E R2.0", price: 2299.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "Gigabyte H310M H", price: 1939.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "ASRock Q270 PRO BTC+", price: 4599.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "Biostar H310MHP", price: 1698.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "MSI H30M Pro-VDN", price: 1649.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "Asus WS C246 Pro", price: 10979.0, currency: "‚Ç¥", socet: "s1151", processor: "Intel"),
        (productName: "Gigabyte B550 AORUS Elite", price: 5599.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD"),
        (productName: "Asus TUF Gaming B550-Plus", price: 5798.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD"),
        (productName: "Asus TUF Gaming B550M-Plus", price: 4799.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD"),
        (productName: "Gigabyte B550M Aorus Elite", price: 4446.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD"),
        (productName: "Asus TUF Gaming B550-Plus Wi-Fi II", price: 6599.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD"),
        (productName: "Asus ROG Strix B550-A Gaming", price: 6999.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD"),
        (productName: "Asus ROG Strix B550-E Gaming", price: 8703.0, currency: "‚Ç¥", socet: "sAM4", processor: "AMD")
    ]
    
    func get3Products() -> [ProductInfo] {
        return sourceProducts.shuffled().suffix(3)
    }
}

// –ö–ª–∞—Å - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É DataMapper.
// –û—Å–Ω–æ–≤–Ω–∞ –∑–∞–¥–∞—á–∞ —Ü—å–æ–≥–æ –∫–ª–∞—Å—É - —Ü–µ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞–Ω–Ω—è –¥–∞–Ω–Ω–∏—Ö
// –∑–∞–ø–∏—Å–∞–Ω–∏—Ö —É –ü—Å–µ–≤–¥–æ–Ω–∏–º—ñ ProductInfo —É –¥–∞–Ω—ñ, —è–∫—ñ –æ–ø–∏—Å–∞–Ω—ñ –∫–ª–∞—Å–æ–º Product
// –ø–æ —Å—É—Ç—ñ –ø–µ—Ä–µ–ø–∏—Å–∞—Ç–∏ –≤—Å–µ –∑ ProductInfo —É Product, –±–æ —Ü–µ 2 —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ —Ä—ñ–∑–Ω—ñ, —è–∫ Int —ñ Double.
class DataMapper {
    
    func products(from productInfoList: [ProductInfo]) -> [Product] {
        
        var productList = [Product]()
        
        for productInfo in productInfoList {
            let product = convertToProduct(from: productInfo)
            productList.append(product)
        }
        
        return productList.shuffled()
    }
    
    func convertToProduct(from productInfo: ProductInfo) -> Product {
        
        let product = Product()
        
        product.name = productInfo.0
        product.price = productInfo.1
        product.currency = Currency(rawValue: productInfo.2) ?? .uah
        
        var motherBoard = MotherBoard()
        motherBoard.socet = productInfo.3
        motherBoard.processor = ProcessorType(rawValue: productInfo.4) ?? .none
        
        product.motherBoard = motherBoard
        
        return product
    }
}

// –ö–ª–∞—Å - –∑–∞—Ä–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ –¥–ª—è –æ–ø–∏—Å—É —Ç–∏–ø—É Sceen - –π–æ–≥–æ –∑–∞–¥–∞—á–∞ –≤–∏–≤–µ—Å—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —É –∫–æ–Ω—Å–æ–ª—å
// –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ö–æ—à–∏–∫–∞
class Screen {
    
    func printCheck(cart: Cart) {
        
        var resultStringToPrint = ""
        
        let firstLine = "--------------- –§–Ü–°–ö–ê–õ–¨–ù–ò–ô –ß–ï–ö ----------------"
        resultStringToPrint += firstLine
        
        let separatorLine = "\n-----------------------------------------------"
        
        for index in 0 ..< cart.products.count {
            let product = cart.products[index]
            resultStringToPrint += "\n\(index + 1)\n"
            resultStringToPrint += product.textDescription()
        }
        
        resultStringToPrint += separatorLine
        
        resultStringToPrint += "\nTotal price: \(String(format: "%.2f", cart.totalPrice())) UAH"
        resultStringToPrint += "\nDiscount: \(cart.discountPercentValue())%"
        
        resultStringToPrint += separatorLine
        
        resultStringToPrint += "\nTotal price with Discount:\n\(String(format: "%.2f", cart.totalPriceWithDiscount())) UAH"
        
        resultStringToPrint += separatorLine + separatorLine
        
        print(resultStringToPrint)
    }
    
    func printCart(cart: Cart, currency: Currency) {
        
        let usd = 36.57 // 1 –¥–æ–ª–∞—Ä –∫–æ—à—Ç—É—î 36.57 –≥—Ä–Ω.
        let eur = 40.32 // 1 —î–≤—Ä–æ –∫–æ—à—Ç—É—î 40.32 –≥—Ä–Ω.
        
        var selectedCurrencyValue = 0.0
        
        switch currency {
        case .usd:
            selectedCurrencyValue = 36.57
        case .eur:
            selectedCurrencyValue = 40.32
        case .uah:
            selectedCurrencyValue = 1.0
        }
        
        var resultStringToPrint = ""
        
        resultStringToPrint += "------------------------ –û–±—Ä–∞–Ω–∞ –≤–∞–ª—é—Ç–∞: \(currency.rawValue) ---------------------------"
        
        var resultProducts = cart.products.compactMap { $0 }
        
        for index in 0 ..< resultProducts.count {
            let product = cart.products[index]
            
            let productprice = product.price / selectedCurrencyValue
            
            resultStringToPrint += "\n\(index + 1) "
            resultStringToPrint += "–ù–∞–∑–≤–∞ –ø—Ä–æ–¥—É–∫—Ç—É: \(product.name), "
            resultStringToPrint += "–¶—ñ–Ω–∞: \(currency.rawValue) \(String(format: "%.2f", productprice))"
        }
        
        resultStringToPrint += "\n---------------------------------------------------------------------"
        
        print(resultStringToPrint)
    }
}

// –ö–Ü–ù–ï–¶–¨ –°–ï–ö–¶–Ü–á 1



// –°–ï–ö–¶–Ü–Ø 2 - –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ç–∏–ø—ñ–≤, –æ–ø–∏—Å–∞–Ω–∏—Ö —É —Å–µ–∫—Ü—ñ—ó 1


/*
 
 –ü—É–Ω–∫—Ç 1
 
 1  –†–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂—á–µ
    –º—ñ–∂ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º:
        –ü–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 1
    —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º:
        –ö—ñ–Ω–µ—Ü—å –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 1

 2 –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–¥ —ñ –≤ –∫–æ–Ω—Å–æ–ª—ñ –ø–æ–±–∞—á–∏—Ç–µ –¥—Ä—É–∫ —á–µ–∫—É –¥–ª—è –≤—Å—ñ—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —É –∫–æ—Ä–∑–∏–Ω—ñ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
 3 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î VIP –∑–Ω–∏–∂–∫—É (discount), –∞–ª–µ –π–æ–º—É –¥—Ä—É–∫—É—î—Ç—å—Å—è —á–µ–∫ –∑ —Ü—ñ–Ω–æ—é –±–µ–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏
 
 –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–¥ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Å—Ü–µ–Ω–∞—Ä—ñ—é, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –¥—Ä—É–∫—É–≤–∞–≤—Å—è —á–µ–∫ –∑ —Ü—ñ–Ω–æ—é, —è–∫–∞ –≤—Ä–∞—Ö–æ–≤—É—î –∑–Ω–∏–∂–∫—É VIP
 
 !! –ö–æ–¥ –∑ –ü—É–Ω–∫—Ç—É 1 –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —É —Å—Ü–µ–Ω–∞—Ä—ñ—é –ü—É–Ω–∫—Ç–∞ 2
 
 */

// –ü–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 1



print("SCENARIO 1:\n")

// –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è "–µ–∫–∑–µ–º–ø–ª—è—Ä—É" (instanse) ResponseFromServer
let responseFromServer = ResponseFromServer()
// –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤, —è–∫—ñ –æ—Ç—Ä–∏–º–∞–ª–∏ –∑ —Å–µ—Ä–≤–µ—Ä–∞,
// —É —è–∫–æ–º—É—Å—å –Ω–µ –¥—É–∂–µ –∑—Ä—É—á–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ (—É –¥–∞–Ω–æ–º—É –≤–∏–ø–∞–¥–∫—É Tuples)
let receivedProducts = responseFromServer.sourceProducts
// –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è "–µ–∫–∑–µ–º–ø–ª—è—Ä—É" (instanse) DataMapper
let dataMapper = DataMapper()

// –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è "–µ–∫–∑–µ–º–ø–ª—è—Ä—É" (instanse) Cart
let cart = Cart()
// –ó–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –ø–æ–ª—è (–∑–º—ñ–Ω–Ω–æ—ó –∫–ª–∞—Å—É Cart), —â–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏ –≤ –Ω–µ—ó –º–∞—Å–∏–≤ —Å–∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
cart.products = dataMapper.products(from: receivedProducts)
// –ó–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –ø–æ–ª—è (–∑–º—ñ–Ω–Ω–æ—ó –∫–ª–∞—Å—É Cart), —â–æ–± –∑–∞–ø–∏—Å–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è discount
cart.discount = .vip

// –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è "–µ–∫–∑–µ–º–ø–ª—è—Ä—É" (instanse) Screen
let screen = Screen()
// –í–∏–∫–ª–∏–∫–∞—î–º–æ –º–µ—Ç–æ–¥ printCheck –¥–ª—è –¥—Ä—É–∫—É —É –∫–æ–Ω—Å–æ–ª—å
// —ñ –ø–µ—Ä–µ–¥–∞—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É cart —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä —É —Ñ—É–Ω–∫—Ü—ñ—é
screen.printCheck(cart: cart)



// –ö—ñ–Ω–µ—Ü—å –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 1


/*
 
 –ü—É–Ω–∫—Ç 2
 
 –û–ø–∏—Å —Å—Ü–µ–Ω–∞—Ä—ñ—é –ø—É–Ω–∫—Ç–∞ 2:
 
    –Ü–Ω—à–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –ø–∏—Å–∞–≤ –∫–æ–¥, –¥—É–∂–µ –ø–æ—Å–ø—ñ—à–∞–≤ —ñ –Ω–µ –ø–µ—Ä–≤—ñ—Ä–∏–≤ –π–æ–≥–æ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è,
    –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ –¥–æ–¥–∞—Ç–æ–∫ –Ω–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —ñ –ø–æ—ó—Ö–∞–≤ —É —Å–≤–æ—ó—Ö —Å–ø—Ä–∞–≤–∞—Ö.

    –¢–µ—Å—Ç—É–≤–∞–ª—å–Ω–∏–∫ –∑–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∞—Å –∑ –ø—Ä–æ—Ö–∞–Ω–Ω—è–º —à–≤–∏–¥–∫–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω–∏–π –∫—Ä–∏—Ç–∏—á–Ω–∏–π –±–∞–≥ —ñ –Ω–∞–¥—ñ—Å–ª–∞–≤ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –æ–ø–∏—Å:
    
    1 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±—Ä–∞–≤ —Ç—Ä–∏ –ø—Ä–æ–¥—É–∫—Ç–∏
    2 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏—Ä—ñ—à–∏–≤ –æ—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É Clear,
    3 –î–æ–¥–∞—Ç–æ–∫ –∞–≤–∞—Ä—ñ–π–Ω–æ –∑–∞–≤–µ—Ä—à–∏–≤—Å—è (crash)
 
    –ó–∞–¥–∞—á–∞:
    - –í–∏–ø—Ä–∞–≤–∏—Ç–∏ crash, —è–∫–∏–π –≤–∏–Ω–∏–∫–∞—î –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É Clear
    - –Ø–∫—â–æ –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π —ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É "–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è",
      –∑–∞–º—ñ—Å—Ç—å —á–µ–∫—É –∑ –Ω—É–ª—è–º–∏ –º–∞—î –≤–∏–≤–æ–¥–∏—Ç–∏—Å—å —Ç–µ–∫—Å—Ç:
        "–ö–æ—à–∏–∫ –ø—É—Å—Ç–∏–π. –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞–π—Ç–µ —Ö–æ—á–∞ –± –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä"
 
    * –ü—Ä–∏–º—ñ—Ç–∫–∞:
        –î—ñ—é –∫–Ω–æ–ø–∫–∏ Clear –≤–∏–∫–æ–Ω—É—î —Ñ—É–Ω–∫—Ü—ñ—è –∑ –Ω–∞–∑–≤–æ—é clear()
 
 
 1  –†–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂—á–µ
    –º—ñ–∂ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º:
        –ü–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 2
    —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º:
        –ö—ñ–Ω–µ—Ü—å –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 2

 2 –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–¥ —ñ –≤–∏ –ø–æ–±–∞—á–∏—Ç–µ –ø—ñ–¥—Å–≤—ñ—Ç–∫—É —á–µ—Ä–≤–æ–Ω–∏–º, —â–æ —î crash
 
 –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–Ω–∞–π—Ç–∏ —Ç–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É, —â–æ–± –Ω–µ –±—É–ª–æ crash
 
 !! –ö–æ–¥ –∑ –ü—É–Ω–∫—Ç—É 1 –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è —É —Å—Ü–µ–Ω–∞—Ä—ñ—é –ü—É–Ω–∫—Ç–∞ 3
 
 */


// –ü–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 2


 
print("\nSCENARIO 2:\n")

// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –¥–æ–¥–∞—î —Ç—Ä–∏ —Ç–æ–≤–∞—Ä–∏ —É –∫–æ—à–∏–∫
cart.products = dataMapper.products(from: responseFromServer.get3Products())
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –¥–µ—Å—å –Ω–∞ –µ–∫—Ä–∞–Ω—ñ –∫–Ω–æ–ø–∫—É "–û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫" (Clear)
cart.clear()

// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É "–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ —á–µ–∫
if cart.products.isEmpty {
    print("–ö–æ—à–∏–∫ –ø—É—Å—Ç–∏–π. –î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–æ–¥–∞–π—Ç–µ —Ö–æ—á–∞ –± –æ–¥–∏–Ω —Ç–æ–≤–∞—Ä")
} else {
    screen.printCheck(cart: cart)
}
 

// –ö—ñ–Ω–µ—Ü—å –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 2



/*
 
 –ü—É–Ω–∫—Ç 3
 
 –û–ø–∏—Å —Å—Ü–µ–Ω–∞—Ä—ñ—é –ø—É–Ω–∫—Ç–∞ 3:
 
    –Ü–Ω—à–∏–π —Ä–æ–∑—Ä–æ–±–Ω–∏–∫, —è–∫–∏–π –ø–∏—Å–∞–≤ –∫–æ–¥, –≤—ñ–¥—ñ–π—à–æ–≤ –ø–æ –∫–∞–≤—É, –∞ –π–æ–≥–æ –∫—ñ—Ç –ø—Ä–æ–±—ñ–≥—Å—è –ø–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—ñ.
    –ö–æ–ª–∏ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è, —Ç–æ –Ω–µ –ø–æ–º—ñ—Ç–∏–≤ –Ω—ñ—è–∫–∏—Ö –∑–º—ñ–Ω (—Ç–æ–º—É, —â–æ –Ω–µ –ø—ñ–¥–∫–ª—é—á–∏–≤ git, –¥–µ –≤–∏–¥–Ω–æ –≤—Å—ñ –∑–º—ñ–Ω–∏ üòÖ)
    —ñ –≤—ñ–¥–ø—Ä–∞–≤–∏–≤ build (–∑–±—ñ—Ä–∫—É/–¥–æ–¥–∞—Ç–æ–∫) –Ω–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è.

    –¢–µ—Å—Ç—É–≤–∞–ª—å–Ω–∏–∫ –∑–≤–µ—Ä–Ω—É–≤—Å—è –¥–æ –≤–∞—Å –∑ –ø—Ä–æ—Ö–∞–Ω–Ω—è–º —à–≤–∏–¥–∫–æ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –∑–Ω–∞–π–¥–µ–Ω–∏–π –±–∞–≥ —ñ –Ω–∞–¥—ñ—Å–ª–∞–≤ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –æ–ø–∏—Å:
    
    1 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±—Ä–∞–≤ –¥–æ–¥–∞–≤ –ø—Ä–æ–¥—É–∫—Ç–∏ (–∫—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–µ –º–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è)
    2 –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏—Ä—ñ—à–∏–≤ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —Ü—ñ–Ω–∏ —É —Ä—ñ–∑–Ω–∏—Ö –≤–∞–ª—é—Ç–∞—Ö
    3 –ö–æ–ª–∏ –∫–æ–æ–∏—Å—Ç—É–≤–∞—á –∑–º—ñ–Ω—é –≤–∞–ª—é—Ç—É –Ω–∞ USD –∞–±–æ EUR - —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç–∏ –∑–º—ñ–Ω—é—î—Ç—å—Å—è, –∞ —Ü—ñ–Ω–∞ –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è —É –≥—Ä–∏–≤–Ω—è—Ö
 
    –ó–∞–¥–∞—á–∞:
    - –í–∏–ø—Ä–∞–≤–∏—Ç–∏ –ª–æ–≥—ñ–∫—É –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ü—ñ–Ω –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –æ–±—Ä–∞–Ω–æ—ó –≤–∞–ª—é—Ç–∏
 
 
 1  –†–æ–∑–∫–æ–º–µ–Ω—Ç—É–π—Ç–µ –∫–æ–¥ –Ω–∏–∂—á–µ
    –º—ñ–∂ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º:
        –ü–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 3
    —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä–µ–º:
        –ö—ñ–Ω–µ—Ü—å –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 3

 2 –ó–∞–ø—É—Å—Ç—ñ—Ç—å –∫–æ–¥ —ñ –≤–∏ –ø–æ–±–∞—á–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—ñ 3 —Å–ø–∏—Å–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤ –∑ —Ü—ñ–Ω–∞–º–∏ —É —Ä—ñ–∑–Ω–∏—Ö –≤–∞–ª—é—Ç–∞—Ö
 
 –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –∑–Ω–∞–π—Ç–∏ —Ç–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É, —â–æ–± —Ü—ñ–Ω–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª–∏ –æ–±—Ä–∞–Ω—ñ–π –≤–∞–ª—é—Ç—ñ
 
 */


// –ü–æ—á–∞—Ç–æ–∫ –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 3


print("\nSCENARIO 3:\n")

// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –æ–±–∏—Ä–∞—î —è–∫—É—Å—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤
cart.products = dataMapper.products(from: responseFromServer.sourceProducts)

// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É –∑–º—ñ–Ω–∏ –≤–∞–ª—é—Ç–∏ –Ω–∞ UAH
screen.printCart(cart: cart, currency: .uah)
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É –∑–º—ñ–Ω–∏ –≤–∞–ª—é—Ç–∏ –Ω–∞ USD
screen.printCart(cart: cart, currency: .usd)
// –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞—Ç–∏—Å–∫–∞—î –∫–Ω–æ–ø–∫—É –∑–º—ñ–Ω–∏ –≤–∞–ª—é—Ç–∏ –Ω–∞ EUR
screen.printCart(cart: cart, currency: .eur)


 
// –ö—ñ–Ω–µ—Ü—å –∫–æ–¥—É —Å—Ü–µ–Ω–∞—Ä—ñ—é –¥–ª—è –ü—É–Ω–∫—Ç 3


// –ö–Ü–ù–ï–¶–¨ –°–ï–ö–¶–Ü–á 2
